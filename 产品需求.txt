项目需求文档
FastAPI 服务集成
1. 背景
随着业务的发展和用户需求的增长，我们需要提高用户体验和确保后台处理的稳定性。为了满足这些需求，
我们决定实现一个新的 FastAPI 服务，该服务将与核心 C 账务系统和 Java 管理平台进行交互。
此外，为了保证原有核心 C 账务系统的稳定性并满足对账文件的输出功能，我们引入了 FastAPI 对账文件推送服务。这不仅提高了整体的效率，而且确保了数据的准确性和及时性。

2. 主要功能
2.1 FastAPI 推送服务
输入: 从核心 C 服务接收的 ZeroMQ 消息。
处理: 解析消息，获取所需的交易信息。
输出: 通过 HTTP/HTTPS 向 Java 管理平台发送交易通知。
重试策略:

当推送服务无法通知 Java 管理平台时，将启动重试机制。
初始重试延迟为 5 秒。
每次重试失败后，延迟时间翻倍。
最大延迟时间为 5 分钟。
最大重试次数为 5 次。
2.2 FastAPI 对账文件推送服务
输入: 从核心 C 服务通过 ZeroMQ 接收的消息，这些消息包含商户号和结算日期。
处理:
根据收到的信息查询 Oracle 11g 数据库。
将查询结果汇总为 Excel 文件。
输出: 使用 FTP 将 Excel 文件推送到内部文件服务器。

3. 非功能性需求
可靠性: 必须实现消息传输的重试机制，确保交易通知的成功传输。
性能: 服务应能够处理高并发的请求，确保快速响应。
安全性: 与外部系统的所有通信都必须是加密的和安全的。
4. 技术栈
主要开发语言: Python
框架: FastAPI
消息队列: ZeroMQ
数据库: Oracle 11g
5. 交付物
源代码: 包括所有服务、工具和测试的完整源代码。
文档: 包括安装指南、用户手册和 API 文档。
测试报告: 包括单元测试、集成测试和性能测试的结果。

